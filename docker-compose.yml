version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: my_database
    volumes:
      - ./setup.sql:/docker-entrypoint-initdb.d/setup.sql
    ports:
      - "5432:5432"
    networks:
      - my_network

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - my_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_container
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - my_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana_container
    ports:
      - "3000:3000"
    networks:
      - my_network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123  # Senha do admin do Grafana
    volumes:
      - grafana_data:/var/lib/grafana

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: leilaosiddocker
      RABBITMQ_DEFAULT_PASS: leilaosiddocker123
    networks:
      - my_network

  springboot-app:
    build:
      context: .
      dockerfile: leilao/Dockerfile
    container_name: springboot_container
    ports:
      - "8080:8080"
    depends_on:
      - db
      - rabbitmq
    networks:
      - my_network
    platform: linux/amd64
    entrypoint: |
      sh -c "
        until nc -z rabbitmq 5672; do
          echo 'Aguardando RabbitMQ...';
          sleep 5;
        done;
        java -jar app.jar"


  auction-app:
    build:
      context: .
      dockerfile: auctions_active/Dockerfile_compose
    container_name: auction_app_container
    ports:
      - "6003:6003"
    networks:
      - my_network
    depends_on:
      - redis
networks:
  my_network:
    driver: bridge

volumes:
  grafana_data:
    driver: local
